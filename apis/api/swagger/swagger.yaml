swagger: "2.0"
info:
  version: "0.0.1"
  title: Ticket management
host: localhost:8080
basePath: /ticket-management/api/v1/
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /users/{userId}/tickets:
    x-swagger-router-controller: ticket
    post:
      description: Create new ticket in system. On successful creation, returns Ticket object populated with unique identifier.
      operationId: create
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: Ticket
          in: body
          description: Object encapsulating ticket details.
          required: true
          schema:
            type: object
            $ref: "#/definitions/Ticket"
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Ticket"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{userId}/tickets/search:
    x-swagger-router-controller: ticket
    post:
      description: Get tickets filtered by status.
      operationId: getByStatus
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: TicketQuery
          in: body
          required: true
          schema:
            $ref: "#/definitions/TicketQuery"
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        "200":
          description: Returns list of tickets associated with status.
          schema:
            $ref: "#/definitions/Tickets"
        default:
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{userId}/tickets/classify:
    x-swagger-router-controller: classify
    post:
      description: Use request description to identify classifications and returns Ticket object populated with classifications.
      operationId: classify
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: RequestDetails
          in: body
          description: Object encapsulating request details.
          required: true
          schema:
            type: object
            $ref: "#/definitions/RequestDetails"
        - name: Authorization
          in: header
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Ticket"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  RequestDetails:
    required:
      - summary
      - description
    properties:
      summary:
        type: string
      description:
        type: string
  Ticket:
    required:
      - requestDetails
      - ticketDetails
    properties:
      uuid:
        type: string
      requestDetails:
        type: object
        $ref : "#/definitions/RequestDetails"
      status:
        type: string
      remarks:
        type: string
      requesterId:
        type: string
      supportUserId:
        type: string
      completed:
        type: string
        format: date
      ticketDetails:
        type: object
        $ref : "#/definitions/TicketDetails"
  TicketDetails:
    required:
      - serviceCategory
      - projectName
      - tierOneCategory
      - tierTwoCategory
      - tierThreeCategory
      - urgency
    properties:
      serviceCategory:
        type: string
      projectName:
        type: string
      tierOneCategory:
        type: string
      tierTwoCategory:
        type: string
      tierThreeCategory:
        type: string
      urgency:
        type: string
      attachment:
        type: string
  TicketQuery:
    required:
      - status
      - queryType
      - offset
      - limit
    properties:
      status:
        type: array
        items:
          type: string
      queryType:
        type: string
      offset:
        type: integer
      limit:
        type: integer
  Tickets:
    required:
      - tickets
      - count
    properties:
      tickets:
        type: array
        items:
          $ref: '#/definitions/Ticket'
      count:
        type: integer
        format: int32
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
